{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Welcome to the BotiCord API ( [v1] ) documentation! Domains Table Description Domain Website boticord.top Internal API boticord.top/api Main API [v1] api.boticord.top/v1 Authorization A lot of methods requires to provide an authorization API-token. In http requests you can set it in headers like this: headers value Authorization API-\u0442\u043e\u043a\u0435\u043d How to get an API-token? To get an API-token you need to add your bot to the website . After its verification you can use all the features of the BotiCord Service. Then go to the edit page (of your bot). Ratelimits What will exceeding the limits lead to? Exceeding the Limits will result in temporary blocking of access to the resource! If abused frequently, access may be permanently restricted. Limits Route Limit Retry after * 5/5 s 5 s /v1/server 1/2 s 2 s /v1/stats 1/2 s 2 s Recommendations Don't set posting stats interval lower than 900 seconds! Try not to reach the limits.","title":"Home"},{"location":"#home","text":"Welcome to the BotiCord API ( [v1] ) documentation!","title":"Home"},{"location":"#domains-table","text":"Description Domain Website boticord.top Internal API boticord.top/api Main API [v1] api.boticord.top/v1","title":"Domains Table"},{"location":"#authorization","text":"A lot of methods requires to provide an authorization API-token. In http requests you can set it in headers like this: headers value Authorization API-\u0442\u043e\u043a\u0435\u043d","title":"Authorization"},{"location":"#how-to-get-an-api-token","text":"To get an API-token you need to add your bot to the website . After its verification you can use all the features of the BotiCord Service. Then go to the edit page (of your bot).","title":"How to get an API-token?"},{"location":"#ratelimits","text":"What will exceeding the limits lead to? Exceeding the Limits will result in temporary blocking of access to the resource! If abused frequently, access may be permanently restricted.","title":"Ratelimits"},{"location":"#limits","text":"Route Limit Retry after * 5/5 s 5 s /v1/server 1/2 s 2 s /v1/stats 1/2 s 2 s Recommendations Don't set posting stats interval lower than 900 seconds! Try not to reach the limits.","title":"Limits"},{"location":"webhooks/","text":"Webhooks Get real-time information from the Boticord API. How to work with it? The first thing you must do is set up a link to the webhook. You can do it on the bot/server edit page. After setting up the link, on the same page, under the webhook link field, you can copy private key that will be sent in Headers as X-Hook-Key (to check the authorization). And what to do next? Next, just accept messages from the Boticord. It requires you to setup your own HTTP server. What should I use from it? Our list of recommendation libs: Python - aiohttp , Flask or BoticordPY Webhooks . Node.js - Fastify or http / https Rust - warp List of events: Boticord Events Description new_bot_comment On new bot comment edit_bot_comment On bot comment edit delete_bot_comment On bot comment delete new_bot_bump On new bot bump new_server_comment On new server comment edit_server_comment On server comment edit delete_server_comment On server comment delete Response Data examples: Bot Bump { \"type\" : \"new_bot_bump\" , \"data\" : { \"user\" : \"178404926869733376\" , \"at\" : 1631789378024 } } Action with comment { \"type\": \"*_*_comment\", // Types provided in list \"data\": { \"user\": \"178404926869733376\", \"comment\": { \"vote\": { \"old\": -1 | null, \"new\": 1 | null }, \"old\": \"\u041f\u043b\u043e\u0445\u043e\u0439 \u0431\u043e\u0442!\" | null, \"new\": \"\u041b\u0443\u0447\u0448\u0438\u0439 \u0431\u043e\u0442 \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u0431\u043e\u0442\u043e\u0432 \u0438 \u0432\u0440\u0435\u043c\u0451\u043d!\" | null }, \"reason\": \"self\" | \"moderation\", // If comment has been deleted \"at\": 1631789378024 } }","title":"Webhooks"},{"location":"webhooks/#webhooks","text":"Get real-time information from the Boticord API.","title":"Webhooks"},{"location":"webhooks/#how-to-work-with-it","text":"The first thing you must do is set up a link to the webhook. You can do it on the bot/server edit page. After setting up the link, on the same page, under the webhook link field, you can copy private key that will be sent in Headers as X-Hook-Key (to check the authorization).","title":"How to work with it?"},{"location":"webhooks/#and-what-to-do-next","text":"Next, just accept messages from the Boticord. It requires you to setup your own HTTP server.","title":"And what to do next?"},{"location":"webhooks/#what-should-i-use-from-it","text":"Our list of recommendation libs: Python - aiohttp , Flask or BoticordPY Webhooks . Node.js - Fastify or http / https Rust - warp","title":"What should I use from it?"},{"location":"webhooks/#list-of-events","text":"Boticord Events Description new_bot_comment On new bot comment edit_bot_comment On bot comment edit delete_bot_comment On bot comment delete new_bot_bump On new bot bump new_server_comment On new server comment edit_server_comment On server comment edit delete_server_comment On server comment delete","title":"List of events:"},{"location":"webhooks/#response-data-examples","text":"","title":"Response Data examples:"},{"location":"webhooks/#bot-bump","text":"{ \"type\" : \"new_bot_bump\" , \"data\" : { \"user\" : \"178404926869733376\" , \"at\" : 1631789378024 } }","title":"Bot Bump"},{"location":"webhooks/#action-with-comment","text":"{ \"type\": \"*_*_comment\", // Types provided in list \"data\": { \"user\": \"178404926869733376\", \"comment\": { \"vote\": { \"old\": -1 | null, \"new\": 1 | null }, \"old\": \"\u041f\u043b\u043e\u0445\u043e\u0439 \u0431\u043e\u0442!\" | null, \"new\": \"\u041b\u0443\u0447\u0448\u0438\u0439 \u0431\u043e\u0442 \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u0431\u043e\u0442\u043e\u0432 \u0438 \u0432\u0440\u0435\u043c\u0451\u043d!\" | null }, \"reason\": \"self\" | \"moderation\", // If comment has been deleted \"at\": 1631789378024 } }","title":"Action with comment"},{"location":"libraries/boticordjs/","text":"JavaScript boticord.js - is a JavaScript (TypeScript) library to interact with the Boticord API. Links: Github-Repository NPM Documentation READ IT PLEASE! The library supports discord.js , Eris , Discordoo , but you may not use them. If you have typescript in your project, please enable skipLibCheck property in your tsconfig.json Installation npm i boticord.js Examples: Stats autoposting (discord.js) import { Client as BotiCord , DjsAdapter } from '../../src' // from 'boticord.js' const client : any = {} // Discord.js client const adapter = new DjsAdapter ( client ) // pass djs client to adapter const boticord = new BotiCord ({ token : 'YOUR_BOTICORD_API_TOKEN' , apiVersion : 1 }, adapter ) boticord . botStatsAutopost () . then ( success => { if ( success ) console . log ( 'autopost started successfully!' ) else console . log ( 'autopost already running' ) }) . catch ( error => { console . log ( 'whoops, some error occurred!' , error ) }) Simple stats posting import { Client as BotiCord } from '../src' // from 'boticord.js' const boticord = new BotiCord ({ token : 'YOUR_BOTICORD_API_TOKEN' , apiVersion : 1 }) boticord . bots . postStats ({ servers : 123 , users : 12345 , shards : 1 }) . then ( success => { console . log ( 'posted bot stats! success?' , success ) }) You can find other examples here . Need help? If you need any help we recommend you to read documentation . You can find us here . Main Library developer is @san4ouZ#1007","title":"JS (TS)"},{"location":"libraries/boticordjs/#javascript","text":"boticord.js - is a JavaScript (TypeScript) library to interact with the Boticord API.","title":"JavaScript"},{"location":"libraries/boticordjs/#links","text":"Github-Repository NPM Documentation READ IT PLEASE! The library supports discord.js , Eris , Discordoo , but you may not use them. If you have typescript in your project, please enable skipLibCheck property in your tsconfig.json","title":"Links:"},{"location":"libraries/boticordjs/#installation","text":"npm i boticord.js","title":"Installation"},{"location":"libraries/boticordjs/#examples","text":"Stats autoposting (discord.js) import { Client as BotiCord , DjsAdapter } from '../../src' // from 'boticord.js' const client : any = {} // Discord.js client const adapter = new DjsAdapter ( client ) // pass djs client to adapter const boticord = new BotiCord ({ token : 'YOUR_BOTICORD_API_TOKEN' , apiVersion : 1 }, adapter ) boticord . botStatsAutopost () . then ( success => { if ( success ) console . log ( 'autopost started successfully!' ) else console . log ( 'autopost already running' ) }) . catch ( error => { console . log ( 'whoops, some error occurred!' , error ) }) Simple stats posting import { Client as BotiCord } from '../src' // from 'boticord.js' const boticord = new BotiCord ({ token : 'YOUR_BOTICORD_API_TOKEN' , apiVersion : 1 }) boticord . bots . postStats ({ servers : 123 , users : 12345 , shards : 1 }) . then ( success => { console . log ( 'posted bot stats! success?' , success ) }) You can find other examples here .","title":"Examples:"},{"location":"libraries/boticordjs/#need-help","text":"If you need any help we recommend you to read documentation . You can find us here . Main Library developer is @san4ouZ#1007","title":"Need help?"},{"location":"libraries/boticordpy/","text":"Python BoticordPY is a Python library to interact with the Boticord API. Links: Github-Repository PyPi Documentation Installation Enter one of these commands to install the library: pip install boticordpy python3 -m pip install boticordpy pip install git+https://github.com/boticord/boticordpy Note that the last installation option (from git) does not guarantee full functionality of the library. Examples: Stats autoposting (discord.py) from discord.ext import commands from boticordpy import BoticordClient bot = commands . Bot ( command_prefix = \"!\" ) async def get_stats (): return { \"servers\" : len ( bot . guilds ), \"shards\" : 0 , \"users\" : len ( bot . users )} async def on_success_posting (): print ( \"stats posting successfully\" ) boticord_client = BoticordClient ( \"your_api_token\" ) autopost = ( boticord_client . autopost () . init_stats ( get_stats ) . on_success ( on_success_posting ) . start () ) bot . run ( \"bot token\" ) Boticord Webhooks (discord.py) from discord.ext import commands from boticordpy import webhook bot = commands . Bot ( command_prefix = \"!\" ) async def edit_bot_comment ( data ): print ( data . comment . new ) boticord_webhook = webhook . Webhook ( \"x-hook-key\" , \"bot\" ) . register_listener ( \"edit_bot_comment\" , edit_bot_comment ) boticord_webhook . start ( 5000 ) bot . run ( \"bot token\" ) Need help? If You need any help we recommend you to check the documentation. You can find us here . Main developer is Marakarka#0575","title":"Python"},{"location":"libraries/boticordpy/#python","text":"BoticordPY is a Python library to interact with the Boticord API.","title":"Python"},{"location":"libraries/boticordpy/#links","text":"Github-Repository PyPi Documentation","title":"Links:"},{"location":"libraries/boticordpy/#installation","text":"Enter one of these commands to install the library: pip install boticordpy python3 -m pip install boticordpy pip install git+https://github.com/boticord/boticordpy Note that the last installation option (from git) does not guarantee full functionality of the library.","title":"Installation"},{"location":"libraries/boticordpy/#examples","text":"Stats autoposting (discord.py) from discord.ext import commands from boticordpy import BoticordClient bot = commands . Bot ( command_prefix = \"!\" ) async def get_stats (): return { \"servers\" : len ( bot . guilds ), \"shards\" : 0 , \"users\" : len ( bot . users )} async def on_success_posting (): print ( \"stats posting successfully\" ) boticord_client = BoticordClient ( \"your_api_token\" ) autopost = ( boticord_client . autopost () . init_stats ( get_stats ) . on_success ( on_success_posting ) . start () ) bot . run ( \"bot token\" ) Boticord Webhooks (discord.py) from discord.ext import commands from boticordpy import webhook bot = commands . Bot ( command_prefix = \"!\" ) async def edit_bot_comment ( data ): print ( data . comment . new ) boticord_webhook = webhook . Webhook ( \"x-hook-key\" , \"bot\" ) . register_listener ( \"edit_bot_comment\" , edit_bot_comment ) boticord_webhook . start ( 5000 ) bot . run ( \"bot token\" )","title":"Examples:"},{"location":"libraries/boticordpy/#need-help","text":"If You need any help we recommend you to check the documentation. You can find us here . Main developer is Marakarka#0575","title":"Need help?"},{"location":"libraries/boticordrs/","text":"Rust BoticordRS - is a Rust crate to interact with the Boticord API. Links: Github-Repository crates.io Documentation Installation Just add this into your Cargo.toml . [dependencies] boticordrs = \"0.1.0\" Examples: Simple stats posting use boticordrs :: { BoticordClient }; use boticordrs :: types :: { BotStats }; #[tokio::main] async fn main () { let client = BoticordClient :: new ( \"your token\" . to_string ()). expect ( \"failed client\" ); let stats = BotStats { servers : 2514 , shards : 3 , users : 338250 }; match client . post_bot_stats ( stats ). await { Ok ( _ ) => { println ! ( \"Well Done!\" ) }, Err ( e ) => eprintln ! ( \"{}\" , e ), } } You can find other examples here (like autoposting). Need help? If you need any help we recommend you to read documentation . You can find us here . Main Library developer is @Marakarka#0575","title":"Rust"},{"location":"libraries/boticordrs/#rust","text":"BoticordRS - is a Rust crate to interact with the Boticord API.","title":"Rust"},{"location":"libraries/boticordrs/#links","text":"Github-Repository crates.io Documentation","title":"Links:"},{"location":"libraries/boticordrs/#installation","text":"Just add this into your Cargo.toml . [dependencies] boticordrs = \"0.1.0\"","title":"Installation"},{"location":"libraries/boticordrs/#examples","text":"Simple stats posting use boticordrs :: { BoticordClient }; use boticordrs :: types :: { BotStats }; #[tokio::main] async fn main () { let client = BoticordClient :: new ( \"your token\" . to_string ()). expect ( \"failed client\" ); let stats = BotStats { servers : 2514 , shards : 3 , users : 338250 }; match client . post_bot_stats ( stats ). await { Ok ( _ ) => { println ! ( \"Well Done!\" ) }, Err ( e ) => eprintln ! ( \"{}\" , e ), } } You can find other examples here (like autoposting).","title":"Examples:"},{"location":"libraries/boticordrs/#need-help","text":"If you need any help we recommend you to read documentation . You can find us here . Main Library developer is @Marakarka#0575","title":"Need help?"},{"location":"methods/bots/","text":"Bots This page lists all API-methods related to bots. GET https://api.boticord.top/v1/bot/:shortCode|botID Information Parameters Response Information about Bot This API method will return you information about the bot from the database. Parameter Data Type Description Path String shortCode | botID String Short Code or Id of bot Status-Code: 200 (API successfully returned information about the bot) { id: String, shortCode: String || null, links: [], information: { bumps: Number, added: Number, prefix: String, permissions: Number, tags: [], developers: [], links: { discord: String || null, github: String || null, site: String || null } , library: String || null , shortDescription: String || null , longDescription: String || null , badge: Number, stats: { servers: Number, shards: Number, users: Number } , status: String } } Status-Code: 404 (No results were found for this query) { error: { code: 404, message: \"Bot not found\" } } GET https://api.boticord.top/v1/bot/:botID/comments Information Parameters Response Bot's comments This API method will return list of comments of specified bot. You must specify an API-token to use this method! Parameter Data Type Description Path String botID String Bot's Id Status-Code: 200 (The API returned an array of comments) If a comment has been updated (isUpdated == true), updatedAt will be set instead of createdAt. [ { userID: String, text: String, vote: Number, isUpdated: false, createdAt: Number }, { userID: String, text: String, vote: Number, isUpdated: true, updatedAt: Number } ] POST https://api.boticord.top/v1/stats Information Parameters Request Body Response Send bot's stats This API method takes the number of servers, shards, users and updates bot's statistics. Send JSON-object as a string. Example (JavaScript): body: JSON.stringify({ servers: 15573, shards: 7, users: 5283954 }); You must specify an API-token to use this method! Parameter Data Type Description Path String Key Data Type Description servers Number Bot\u2019s servers count shards Number Bot\u2019s shards count users Number Bot\u2019s users count Status-Code: 200 (Stats updated successfully) Stats updated successfully (if ok == true). { \"ok\" : true }","title":"Bots"},{"location":"methods/bots/#bots","text":"This page lists all API-methods related to bots. GET https://api.boticord.top/v1/bot/:shortCode|botID Information Parameters Response Information about Bot This API method will return you information about the bot from the database. Parameter Data Type Description Path String shortCode | botID String Short Code or Id of bot Status-Code: 200 (API successfully returned information about the bot) { id: String, shortCode: String || null, links: [], information: { bumps: Number, added: Number, prefix: String, permissions: Number, tags: [], developers: [], links: { discord: String || null, github: String || null, site: String || null } , library: String || null , shortDescription: String || null , longDescription: String || null , badge: Number, stats: { servers: Number, shards: Number, users: Number } , status: String } } Status-Code: 404 (No results were found for this query) { error: { code: 404, message: \"Bot not found\" } } GET https://api.boticord.top/v1/bot/:botID/comments Information Parameters Response Bot's comments This API method will return list of comments of specified bot. You must specify an API-token to use this method! Parameter Data Type Description Path String botID String Bot's Id Status-Code: 200 (The API returned an array of comments) If a comment has been updated (isUpdated == true), updatedAt will be set instead of createdAt. [ { userID: String, text: String, vote: Number, isUpdated: false, createdAt: Number }, { userID: String, text: String, vote: Number, isUpdated: true, updatedAt: Number } ] POST https://api.boticord.top/v1/stats Information Parameters Request Body Response Send bot's stats This API method takes the number of servers, shards, users and updates bot's statistics. Send JSON-object as a string. Example (JavaScript): body: JSON.stringify({ servers: 15573, shards: 7, users: 5283954 }); You must specify an API-token to use this method! Parameter Data Type Description Path String Key Data Type Description servers Number Bot\u2019s servers count shards Number Bot\u2019s shards count users Number Bot\u2019s users count Status-Code: 200 (Stats updated successfully) Stats updated successfully (if ok == true). { \"ok\" : true }","title":"Bots"},{"location":"methods/servers/","text":"Servers This page lists all API-methods related to servers. GET https://api.boticord.top/v1/server/:shortCode|serverID Information Parameters Response Information about the server \u042dThis API method will return you information about the server from the database. Parameter Data Type Description Path String shortCode | serverID String Short Code or Id of server Status-Code: 200 (API successfully returned information about the server) { id: String, shortCode: String || null, status: String, links: [], information: { name: String, avatar: String, members: [Number, Number], // [all, online] owner: String, bumps: Number, tags: [], links: { invite: String || null, site: String || null, youtube: String || null, twitch: String || null, steam: String || null, vk: String || null } , shortDescription: String || null , longDescription: String || null , badge: String } } Status-Code: 404 (No results were found for this query) { error: { code: 404, message: \"Server not found\" } } GET https://api.boticord.top/v1/server/:serverID/comments Information Parameters Response Server's comments This API method will return list of comments of specified server. You must specify an API-token to use this method! Parameter Data Type Description Path String serverID String Id of the server Status-Code: 200 (The API returned an array of comments) If a comment has been updated (isUpdated == true), updatedAt will be set instead of createdAt. [ { userID: String, text: String, vote: Number, isUpdated: false, createdAt: Number }, { userID: String, text: String, vote: Number, isUpdated: true, updatedAt: Number } ] POST https://api.boticord.top/v1/server Information Parameters Request Body Response Send server's stats This API method takes information about the server and updates it on Boticord. You must specify an API-token to use this method! (YOU MUST BE A BOTICORD-SERVICE BOT) Parameter Data Type Description Path String Required? Key Data Type Description Yes serverID String Id of server Yes up Number Type of request: - 0: Update information about the server - 1: Update information about the server and up it Yes status Number Status of server: - 0: there is a bot on the server - 1: there isn't bot on the server No serverName String Name of the server (if specified - will be changed) No serverAvatar String Avatar of the server (if specified - will be changed) No serverMembersAllCount Number Total number of users (if specified - will be changed) No serverMembersOnlineCount Number Number of currently online users (if specified - will be changed) No serverOwnerID String Id of the server owner (if specified - will be changed) Status-Code: 200 updated = true means that information updated successefully, updated = false means something went wrong. Additional information is returned to message as a future bot message. { \"serverID\" : \"722424773233213460\" , \"up\" : 1 , \"updated\" : true , \"bumps\" : 2 , \"boost\" : true , \"upSuccessfully\" : true , \"timeToNextUpInMs\" : 1641589230690 , \"message\" : \":white_check_mark: \u0421\u0435\u0440\u0432\u0435\u0440\u0443 \u0431\u044b\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e **2 UP**!\\n\\n\u2139\ufe0f\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432 \u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0435!\\n> https://myservers.me/s/boticord\" } Status-Code: 401 (Most likely, you specified the API-token incorrectly.) { \"error\" : { \"code\" : 401 , \"message\" : \"Unauthorized\" } } Status-Code: 403 (This error is caused only for private bots: the server that wants to update the information is unavailable to the owner of the API-token.) { \"error\" : { \"code\" : 403 , \"message\" : \"Forbidden\" } }","title":"Servers"},{"location":"methods/servers/#servers","text":"This page lists all API-methods related to servers. GET https://api.boticord.top/v1/server/:shortCode|serverID Information Parameters Response Information about the server \u042dThis API method will return you information about the server from the database. Parameter Data Type Description Path String shortCode | serverID String Short Code or Id of server Status-Code: 200 (API successfully returned information about the server) { id: String, shortCode: String || null, status: String, links: [], information: { name: String, avatar: String, members: [Number, Number], // [all, online] owner: String, bumps: Number, tags: [], links: { invite: String || null, site: String || null, youtube: String || null, twitch: String || null, steam: String || null, vk: String || null } , shortDescription: String || null , longDescription: String || null , badge: String } } Status-Code: 404 (No results were found for this query) { error: { code: 404, message: \"Server not found\" } } GET https://api.boticord.top/v1/server/:serverID/comments Information Parameters Response Server's comments This API method will return list of comments of specified server. You must specify an API-token to use this method! Parameter Data Type Description Path String serverID String Id of the server Status-Code: 200 (The API returned an array of comments) If a comment has been updated (isUpdated == true), updatedAt will be set instead of createdAt. [ { userID: String, text: String, vote: Number, isUpdated: false, createdAt: Number }, { userID: String, text: String, vote: Number, isUpdated: true, updatedAt: Number } ] POST https://api.boticord.top/v1/server Information Parameters Request Body Response Send server's stats This API method takes information about the server and updates it on Boticord. You must specify an API-token to use this method! (YOU MUST BE A BOTICORD-SERVICE BOT) Parameter Data Type Description Path String Required? Key Data Type Description Yes serverID String Id of server Yes up Number Type of request: - 0: Update information about the server - 1: Update information about the server and up it Yes status Number Status of server: - 0: there is a bot on the server - 1: there isn't bot on the server No serverName String Name of the server (if specified - will be changed) No serverAvatar String Avatar of the server (if specified - will be changed) No serverMembersAllCount Number Total number of users (if specified - will be changed) No serverMembersOnlineCount Number Number of currently online users (if specified - will be changed) No serverOwnerID String Id of the server owner (if specified - will be changed) Status-Code: 200 updated = true means that information updated successefully, updated = false means something went wrong. Additional information is returned to message as a future bot message. { \"serverID\" : \"722424773233213460\" , \"up\" : 1 , \"updated\" : true , \"bumps\" : 2 , \"boost\" : true , \"upSuccessfully\" : true , \"timeToNextUpInMs\" : 1641589230690 , \"message\" : \":white_check_mark: \u0421\u0435\u0440\u0432\u0435\u0440\u0443 \u0431\u044b\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e **2 UP**!\\n\\n\u2139\ufe0f\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432 \u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0435!\\n> https://myservers.me/s/boticord\" } Status-Code: 401 (Most likely, you specified the API-token incorrectly.) { \"error\" : { \"code\" : 401 , \"message\" : \"Unauthorized\" } } Status-Code: 403 (This error is caused only for private bots: the server that wants to update the information is unavailable to the owner of the API-token.) { \"error\" : { \"code\" : 403 , \"message\" : \"Forbidden\" } }","title":"Servers"},{"location":"methods/users/","text":"Users This page lists all API-methods related to users profiles. GET https://api.boticord.top/v1/profile/:userID Information Parameters Response Information about the user profile This method returns information about the user with the specified Discord-Id. Parameter Data Type Description Path String userID String Id of the Discord user Status-Code: 200 (API successfully returned information about the user) { \"id\" : ' 178404926869733376 ' , \"status\" : ' \"\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442\u0435 \u043c\u043e\u044e \u0442\u043e\u0447\u043a\u0443 \u0437\u0440\u0435\u043d\u0438\u044f, \u043f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e \u2014 \u0432\u0430\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0434\u043e\u0441\u0442\u0430\u043d\u0435\u0442\u0441\u044f.\" \u00a9 \u0410\u0440\u0442\u0435\u043c\u0438\u0439 \u041b\u0435\u0431\u0435\u0434\u0435\u0432' , \"badge\" : 'STAFF' , \"shortCode\" : 'cipherka' , \"site\" : 'https : //sqdsh.top/' , \"vk\" : null , \"steam\" : 'sadlycipherka' , \"youtube\" : null , \"twitch\" : null , \"git\" : 'https : //git.sqdsh.top/me' } Status-Code: 404 (No results were found for this query) { \"error\" : { \"code\" : 404 , \"message\" : \"Profile not found\" } } GET https://api.boticord.top/v1/profile/:userID/comments Information Parameters Response User's comments This API method will return list of comments by specified user.. You must specify an API-token to use this method! Parameter Data Type Description Path String userID String Id of the user Status-Code: 200 (The API returned to arrays of comments) { \"bots\" : [ 'data from /v 1 /bot/:botID/comments' ], \"servers\" : [ 'data from /v 1 /server/:serverID/comments' ] } GET https://api.boticord.top/v1/bots/:userID Information Parameters Response List of user's bots You must specify an API-token to use this method! Parameter Data Type Description Path String userID String Id of the user Status-Code: 200 (API will return an array with bot's Ids and short codes) [ { \"id\" : \"672406367344132116\" , \"shortCode\" : \"sonata\" } ]","title":"Users"},{"location":"methods/users/#users","text":"This page lists all API-methods related to users profiles. GET https://api.boticord.top/v1/profile/:userID Information Parameters Response Information about the user profile This method returns information about the user with the specified Discord-Id. Parameter Data Type Description Path String userID String Id of the Discord user Status-Code: 200 (API successfully returned information about the user) { \"id\" : ' 178404926869733376 ' , \"status\" : ' \"\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442\u0435 \u043c\u043e\u044e \u0442\u043e\u0447\u043a\u0443 \u0437\u0440\u0435\u043d\u0438\u044f, \u043f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e \u2014 \u0432\u0430\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0434\u043e\u0441\u0442\u0430\u043d\u0435\u0442\u0441\u044f.\" \u00a9 \u0410\u0440\u0442\u0435\u043c\u0438\u0439 \u041b\u0435\u0431\u0435\u0434\u0435\u0432' , \"badge\" : 'STAFF' , \"shortCode\" : 'cipherka' , \"site\" : 'https : //sqdsh.top/' , \"vk\" : null , \"steam\" : 'sadlycipherka' , \"youtube\" : null , \"twitch\" : null , \"git\" : 'https : //git.sqdsh.top/me' } Status-Code: 404 (No results were found for this query) { \"error\" : { \"code\" : 404 , \"message\" : \"Profile not found\" } } GET https://api.boticord.top/v1/profile/:userID/comments Information Parameters Response User's comments This API method will return list of comments by specified user.. You must specify an API-token to use this method! Parameter Data Type Description Path String userID String Id of the user Status-Code: 200 (The API returned to arrays of comments) { \"bots\" : [ 'data from /v 1 /bot/:botID/comments' ], \"servers\" : [ 'data from /v 1 /server/:serverID/comments' ] } GET https://api.boticord.top/v1/bots/:userID Information Parameters Response List of user's bots You must specify an API-token to use this method! Parameter Data Type Description Path String userID String Id of the user Status-Code: 200 (API will return an array with bot's Ids and short codes) [ { \"id\" : \"672406367344132116\" , \"shortCode\" : \"sonata\" } ]","title":"Users"}]}